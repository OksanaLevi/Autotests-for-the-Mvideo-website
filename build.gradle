plugins {
    id 'java-library'
    id 'io.qameta.allure' version '2.11.2'
    id "io.freefair.lombok" version "6.0.0-m2"
}

group 'com.herokuapp.booker-restful'
version '1.0'

repositories {
    mavenCentral()
}
def restAssuredVersion = "5.3.1",
    allureVersion = "2.21.0"

dependencies {
    testImplementation(
            "io.rest-assured:rest-assured:$restAssuredVersion",
            "io.rest-assured:json-schema-validator:$restAssuredVersion",
            "io.qameta.allure:allure-rest-assured:$allureVersion",
            'org.junit.jupiter:junit-jupiter:5.9.3',
            'org.slf4j:slf4j-simple:2.0.7',
            'com.github.javafaker:javafaker:1.0.2',
            'org.aeonbits.owner:owner:1.0.4'
    )
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

tasks.withType(Test) {
    useJUnitPlatform()
    systemProperties(System.getProperties())

    testLogging {
        lifecycle {
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }
}

task get_test(type: Test) {
    useJUnitPlatform{
        includeTags("get")
    }
}

task post_test(type: Test) {
    useJUnitPlatform{
        includeTags("post")
    }
}

task put_test(type: Test) {
    useJUnitPlatform{
        includeTags("put")
    }
}

task patch_test(type: Test) {
    useJUnitPlatform{
        includeTags("patch")
    }
}

task delete_test(type: Test) {
    useJUnitPlatform{
        includeTags("delete")
    }
}

task auth_test(type: Test) {
    useJUnitPlatform{
        includeTags("auth")
    }
}

task create_test(type: Test) {
    useJUnitPlatform{
        includeTags("create")
    }
}

task update_test(type: Test) {
    useJUnitPlatform{
        includeTags("update")
    }
}

task negative_test(type: Test) {
    useJUnitPlatform{
        includeTags("negative")
    }
}

task health_test(type: Test) {
    useJUnitPlatform{
        includeTags("health")
    }
}